{"version":3,"file":"static/webpack/static\\development\\pages\\login.js.bbb14f287a052d9e6c1b.hot-update.js","sources":["webpack:///./components/login/LoginForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Link from 'next/link';\r\nimport { Grid, Header, Input, Checkbox, Button } from 'semantic-ui-react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../store/actions';\r\n\r\nconst styles = {\r\n  Column: {\r\n    background: 'white',\r\n    padding: '45px 20px',\r\n    marginTop: '135px',\r\n    paddingBottom: '15px'\r\n  },\r\n  Link: {\r\n    color: '#e84671'\r\n  },\r\n  Form: {\r\n    padding: '5px 25px'\r\n  },\r\n  FormInput: {\r\n    margin: '10px 0px',\r\n    marginBottom: '30px'\r\n  },\r\n  FormInput2: {\r\n    margin: '10px 0px',\r\n    // marginBottom: '10px'\r\n  },\r\n  Header: {\r\n  },\r\n  SubHeader: {\r\n    marginTop: '10px',\r\n  },\r\n  Checkbox: {\r\n    paddingTop: '3px'\r\n  },\r\n  forgotPassword: {\r\n    fontFamily: 'sofiaprosemibold !important',\r\n    textAlign: 'end',\r\n    color: '#e84671',\r\n    fontSize: '16px',\r\n    marginTop: '10px'\r\n  },\r\n  Button: {\r\n    height: '60px',\r\n    width: '126px'\r\n  },\r\n}\r\n\r\n\r\nconst LoginForm = (props) => {\r\n\r\n  const handleChange = (e, key, {value = null, checked = null } = {}) => {\r\n    let newState = {\r\n      ...loginFormData,\r\n      [key]: e.target.value || value || checked || ''\r\n    }\r\n    setLoginData(newState)\r\n\r\n    //delete error entry\r\n    if (formErrors[key]) delete formErrors[key]\r\n  }\r\n\r\n  const submit = (e) => {\r\n    e.preventDefault();\r\n    let  _formErrors = {};\r\n    Object.keys(loginFormData).forEach((item) => {\r\n      if (!loginFormData[item]) {\r\n        _formErrors[item] = true\r\n      }\r\n    })\r\n\r\n    setFormErrors(_formErrors)\r\n\r\n    console.log(loginFormData, formErrors)\r\n\r\n    // CALL API WITH loginFormData\r\n  }\r\n\r\n  const [ formErrors, setFormErrors ] = useState({})\r\n\r\n  const [loginFormData, setLoginData] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n\r\n  return (\r\n    <Grid className=\"loginForm\" columns={2} centered>\r\n      <Grid.Row>\r\n        <Grid.Column width=\"7\" style={styles.Column}>\r\n          <Header style={styles.Header} textAlign=\"center\" as='h1'>\r\n            Log in\r\n            <Header.Subheader style={styles.SubHeader}>\r\n              Don't have an account? {' '}\r\n              <Link href=\"/signup\">\r\n                <a style={styles.Link}>Sign up</a>\r\n              </Link>\r\n            </Header.Subheader>\r\n          </Header>\r\n          <form style={styles.Form}>\r\n            <Input\r\n              type=\"email\"\r\n              error={formErrors['email']}\r\n              onChange={(e) => handleChange(e, 'email')}\r\n              value={loginFormData.email}\r\n              style={styles.FormInput}\r\n              size=\"huge\"\r\n              placeholder='Email address'\r\n              fluid\r\n            />\r\n            <Input\r\n              type=\"password\"\r\n              error={formErrors['password']}\r\n              onChange={(e) => handleChange(e, 'password')}\r\n              value={loginFormData.password}\r\n              style={styles.FormInput2}\r\n              size=\"huge\"\r\n              placeholder='Password'\r\n              fluid\r\n            />\r\n            <Header.Subheader style={styles.forgotPassword} as='p'>Forgot password?</Header.Subheader>\r\n            <div className=\"is-v-centered\">\r\n              <Button\r\n                onClick={submit}\r\n                style={styles.Button}\r\n                size=\"large\"\r\n                content='Log in'\r\n                secondary />\r\n              <p>\r\n                Are you a service provider?\r\n                {' '}\r\n                <Link href=\"/\">\r\n                  <a style={styles.Link}>Get started</a>\r\n                </Link>\r\n              </p>\r\n            </div>\r\n\r\n          </form>\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default connect(null, actions)(LoginForm);"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAFA;AApCA;AACA;AA0CA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AA5BA;AAAA;AAAA;AAAA;AACA;AADA;AAgCA;AACA;AAFA;AA/BA;AAAA;AAAA;AACA;AAoCA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AAAA;AACA;AAAA;AAIA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AARA;AAWA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;AAAA;AACA;AAAA;AAUA;AACA;AACA;;;;A","sourceRoot":""}